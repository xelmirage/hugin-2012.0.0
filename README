1. GOAL

Toolchain to create panoramic images for every occasion,
from quick holiday snaps to images with hundreds of megapixels.


2. CONTENT

This package contains the following programs:

 - hugin, The main program, a GUI for the panorama tools suite
   and some programs included here.

 - nona, a simple stitcher that does geometrical and photometric
    distortions to photos and writes the output to image files.
    It is a replacement for PTStitcher (doesn't support most
   features of PTStitcher, but is faster, opensource and
   will be extended in the future).  The parameters, mostly
   backward-compatible to PTStitcher, are specified in a .pto 
   project such as those generated by hugin, i.e. nona doesn't
   decide what the distortions are going to be, it just does 
   what it is told to do.
 
 - nona_gui, nona with a graphical progress bar.

 - autooptimiser, optimise a panorama pairwise, starting from an
   anchor image. cmd line version of the pairwise mode in hugin

These programs are built on top of the pano13 library,
http://panotools.sourceforge.net/


3. DEPENDENCIES

Hugin is work in progress and dependencies can be added any time.

Hugin depends on the following packages. The list may be
incomplete, and there may be some platform-specific dependencies.

For the latest updates, check
http://wiki.panotools.org/Development_of_Open_Source_tools#Dependencies


3.1. Build-Time Dependencies

Users compiling Hugin from source will need:

    The wxWidgets GUI toolkit version >=2.7.0. 2.9 support is experimental. 2.8.11 is recommended.
    boost >=1.40. The following boost libraries are used:
        filesystem
        graph
        iostreams
        regex
        signals
        system
        thread
    libtiff the TIFF library with LZW support.
    libpano13 version >=2.9.18
    libjpg the JPEG library
    libpng the PNG library
    libopenexr the OpenEXR library
    Exiv2 Image metadata library
    GLEW the OpenGL Extension Wrangler Library
    freeglut or glut, the OpenGL utility toolkit
    gettext
    optionally, lapack
    on Unix you need also
        libGLU the OpenGL utility library
        libxi
        libxmu
    on Windows you need
        HTML Help Workshop for generating compiled HTML help file    
    for the optional Python Scripting Interface (currently functional and tested only on Linux and Windows)
        Python version >=2.6
        SWIG >=2.0 - If Python >=3.2, SWIG must be >=2.0.4
    Hugin can be compiled with gcc-4.4.4, gcc-4.5.1, and gcc-4.6, as well as with MSVC 2008 and MSVC 2010.
    The build process requires CMake version >=2.8


3.2. At runtime

    enblend >= 3.2 is required.
    Exiftool is recommended.
    Starting with Hugin 2010.3 and newer, Hugin ships with its own control points generator cpfind. Prior to 2010.3 another optional but recommended runtime dependency was a control points generator.
    Optionally Python argparse command-line parsing library for the Python scripts. 


4. USE
    
hugin can be used to stitch multiple images together. The resulting image can
span 360 degrees. Another common use is the creation of very high resolution
pictures by combining multiple images.

See http://hugin.sourceforge.net/ for more information and tutorials.

See http://wiki.panotools.org/Development_of_Open_Source_tools#Supported_Platforms
for some information on releases for different platforms.


5. TYPICAL WORKFLOW

  1. load images
  2. specify initial parameters (lens etc)
  3. select control points points.
  4. run optimizer to estimate image positions
  5. set output parameters and stitch images together.


6. KNOWN ISSUES / INCOMPATIBILITIES / LIMITATIONS

Check the Hugin FAQ and bug tracker

http://wiki.panotools.org/Hugin_FAQ#Known_Limitations

An updated list of issues deemed to be critical,
including discussions and workarounds, is in the issue tracker

https://bugs.launchpad.net/hugin/+bugs?search=Search&field.importance=Critical


Linux: Compiz interferes with the fast preview window.
If you're affected, the workaround is to not use Compiz.

Some components of Hugin have been reported not to deal well with image files
that have the same name in different folders. The workaround is to rename 
your images files so that all image files in a project are unique.


7. SUPPORT / COMMUNITY

Please use the hugin-ptx mailing list if you have questions or suggestions:
http://groups.google.com/group/hugin-ptx
